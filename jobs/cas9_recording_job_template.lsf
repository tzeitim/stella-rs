#!/bin/bash
#BSUB -J cas9_tier{TIER}_analysis
#BSUB -o /shared/cas9_analysis/logs/cas9_tier{TIER}_%J.out
#BSUB -e /shared/cas9_analysis/logs/cas9_tier{TIER}_%J.err
#BSUB -W 0:30
#BSUB -n 1
#BSUB -M 6000

# Cas9 Recording Job - Level 2 of Cascading LSF System
# Applies Cas9 recording for Tier {TIER} and submits reconstruction jobs

echo "=== Cas9 Recording Job Starting - Tier {TIER} ==="
echo "Job ID: $LSB_JOBID"
echo "Host: $HOSTNAME"
echo "Date: $(date)"
echo "GT Tree Path: $1"
echo "Tier: $2"

# Set up environment
export PYTHONPATH="${PYTHONPATH}:/shared/cas9_analysis"

# Validate inputs
if [ -z "$1" ] || [ -z "$2" ]; then
    echo "ERROR: Missing required arguments"
    echo "Usage: cas9_recording_job.lsf <gt_tree_path> <tier>"
    exit 1
fi

# Run Cas9 recording worker
echo "Executing Cas9 recording worker for Tier $2..."
python /shared/cas9_analysis/cas9_recording_worker.py \
    --gt_tree_path "$1" \
    --tier "$2" \
    --output_dir /shared/cas9_analysis/cas9_instances \
    --shared_dir /shared/cas9_analysis

exit_code=$?

if [ $exit_code -eq 0 ]; then
    echo "=== Cas9 Recording Job Completed Successfully - Tier {TIER} ==="
else
    echo "=== Cas9 Recording Job Failed with exit code: $exit_code - Tier {TIER} ==="
fi

exit $exit_code