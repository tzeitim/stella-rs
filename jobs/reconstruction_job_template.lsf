#!/bin/bash
#BSUB -J reconstruct_tier{TIER}_{SOLVER}
#BSUB -oo {SHARED_DIR}/logs/reconstruct_tier{TIER}_{SOLVER}_%J.out
#BSUB -eo {SHARED_DIR}/logs/reconstruct_tier{TIER}_{SOLVER}_%J.err  
#BSUB -W 0:45
#BSUB -n 20 -R "span[hosts=1]"
#BSUB -R rusage[mem=1.5GB]

# Reconstruction Job - Level 3 of Cascading LSF System
# Performs reconstruction with {SOLVER} solver for Tier {TIER}

echo "=== Reconstruction Job Starting - Tier {TIER}, Solver {SOLVER} ==="
echo "Job ID: $LSB_JOBID"
echo "Host: $HOSTNAME"
echo "Date: $(date)"
echo "Cas9 Instance Path: $1"
echo "Solver: $2"
echo "Tier: $3"

# Set up environment
export PYTHONPATH="${PYTHONPATH}:$(pwd)"

# Activate conda environment
eval "$({CONDA_PREFIX}/bin/conda shell.bash hook)"
source {CONDA_PREFIX}/etc/profile.d/mamba.sh
mamba activate cass

# Validate inputs
if [ -z "$1" ] || [ -z "$2" ] || [ -z "$3" ]; then
    echo "ERROR: Missing required arguments"
    echo "Usage: reconstruction_job.lsf <cas9_instance_path> <solver> <tier>"
    exit 1
fi

# Run reconstruction worker
echo "Executing reconstruction worker with $2 solver for Tier $3..."
python reconstruction_worker.py \
    --cas9_instance_path "$1" \
    --solver "$2" \
    --tier "$3" \
    --output_dir results \
    --shared_dir .

exit_code=$?

if [ $exit_code -eq 0 ]; then
    echo "=== Reconstruction Job Completed Successfully - Tier {TIER}, Solver {SOLVER} ==="
else
    echo "=== Reconstruction Job Failed with exit code: $exit_code - Tier {TIER}, Solver {SOLVER} ==="
fi

exit $exit_code